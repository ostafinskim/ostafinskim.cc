---
import 'styles.css';
import ActiveLink from 'components/ActiveLink.astro';
import ThemeProvider from 'components/ThemeProvider.astro';
import ToggleTheme from 'components/ThemeToggle.astro';

export type Props = {
	title?: string;
	type?: string;
	description?: string;
	overrideTitle?: boolean;
	canonical?: string;
	date?: string;
	sharingImageUrl?: string;
};

const {pathname} = Astro.url;
const url = Astro.url.toString();
const isHome = pathname === '/';
const baseUrl = 'https://ostafinski.cc';

let {
	title = 'Miro Ostafinski',
	sharingImageUrl = '/sharing.png',
	type = 'website',
	description = "Hi, I'm Miro Ostafinski, a software engineer and blogger. I write about web development, software engineering, and other topics.",
	canonical,
	date,
} = Astro.props as Props;

if (!isHome) {
	title = `${title} - Miro Ostafinski`;
}

sharingImageUrl = `${baseUrl}${sharingImageUrl}`;

const SOCIAL_LINK = [
	['GitHub', 'https://github.com/ostafinskim'],
	['LinkedIn', 'https://www.linkedin.com/in/ostafinskim'],
];
---

<!doctype html>
<html lang='en' class='dark'>
	<head>
		<meta charset='utf-8' />
		<meta name='viewport' content='width=device-width' />
		<title>{title}</title>
		<meta name='description' content={description} />
		<meta property='og:url' content={url} />
		<meta property='og:type' content={type} />
		<meta property='og:title' content={title} />
		<meta property='og:image' content={sharingImageUrl} />
		<meta property='og:description' content={description} />
		<meta property='og:site_name' content='Miro Ostafinski' />
		<meta name='twitter:site' content='@ostafinskim' />
		<meta name='twitter:card' content='summary_large_image' />
		<meta name='author' content='Miro Ostafinski' />
		<link href={canonical} rel='canonical' />
		{date && <meta property='article:published_time' content={date} />}
		<link href='/manifest.json' rel='manifest' />
		<meta
			name='theme-color'
			content='#fff'
			media='(prefers-color-scheme: light)'
		/>
		<meta
			name='theme-color'
			content='#000'
			media='(prefers-color-scheme: dark)'
		/>
		<ThemeProvider />
	</head>

	<body
		class={`preload-transitions bg-white text-slate-800 dark:text-slate-200 dark:bg-neutral-900 min-w-[20rem]
	antialiased${isHome ? ' flex items-center' : ''}`}
	>
		<div
			class={`w-full m-auto p-6 flex-grow flex flex-col max-w-3xl lg:max-w-4xl ${
				isHome ? 'h-full max-h-[44rem]' : 'min-h-full'
			}`}
		>
			<header>
				<a href='#skip' class='sr-only focus:not-sr-only'>
					Skip to content
				</a>
				<nav class='text-sm sm:text-base'>
					<ul class='flex w-full gap-4'>
						<li class='nav-link'>
							<ActiveLink href='/blog'>Blog</ActiveLink>
						</li>
						<li class='nav-link'>
							<ActiveLink href='/about'>About</ActiveLink>
						</li>
						{
							!isHome && (
								<li class='nav-link'>
									<ActiveLink href='/'>Home</ActiveLink>
								</li>
							)
						}
						<li class='nav-link ml-auto'>
							<ToggleTheme />
						</li>
					</ul>
				</nav>
			</header>
			<main id='skip' class='flex flex-col flex-grow py-12'>
				<slot />
			</main>
			<footer
				class='flex mb-4 text-sm sm:text-base flex-col justify-between sm:flex-row sm:items-end'
			>
				<ul class='flex flex-wrap flex-shrink-0 max-w-full mr-6'>
					{
						SOCIAL_LINK.map(([label, href]) => (
							<li class='mr-4 mt-2'>
								<a
									href={href}
									class='link-emoji relative inline-block text-slate-500 dark:text-slate-300 transition-colors duration-200 border-b dark:border-slate-700'
								>
									{label}
								</a>
							</li>
						))
					}
				</ul>
			</footer>
		</div>
		<script is:inline>
			setTimeout(() => {
				if (
					typeof window !== 'undefined' &&
					document.body.classList.contains('preload-transitions')
				) {
					document.body.classList.remove('preload-transitions');
				}
			}, 0);
		</script>
	</body>
</html>
